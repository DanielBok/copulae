import numpy as np
from numpy.testing import assert_allclose

from copulae.mixtures.gmc.marginals import approximate_pnorm, p_gmm_marginal
from copulae.mixtures.gmc.param import GMCParam

param = GMCParam(3, 2,
                 prob=[0.48923563, 0.05350188, 0.45726249],
                 means=[
                     [-7.866836, -11.073276],
                     [-3.336661, 24.139628],
                     [-23.879568, -5.213695]
                 ],
                 covs=[
                     [[15.9705696, -0.27545926],
                      [-0.2754593, 0.01738696]],
                     [[3.973527, -2.588777],
                      [-2.588777, 6.676961]],
                     [[5.3549889, -0.3326589],
                      [-0.3326589, 4.8624179]]
                 ])


def test_p_gmm_marginal():
    z = np.array([[-3.677231992, 2.3490822],
                  [1.743806244, 1.6101606],
                  [-3.300399649, 1.8222931],
                  [-1.548997255, -1.7920712],
                  [-3.230406265, 3.6765432],
                  [1.247973969, 0.3122671],
                  [0.626518395, -1.2115218],
                  [-2.246109197, 4.8176366],
                  [-0.393638703, 0.1285267],
                  [0.004476217, 1.4794919]])

    actual = p_gmm_marginal(z, param)
    expected = [[0.8975912, 0.9463591],
                [0.9957476, 0.9460456],
                [0.9117104, 0.9461722],
                [0.9622472, 0.9188961],
                [0.9142214, 0.9464853],
                [0.9939016, 0.9437019],
                [0.9905330, 0.9305998],
                [0.9453356, 0.9464969],
                [0.9812174, 0.9429709],
                [0.9855323, 0.9459467]]

    assert_allclose(actual, expected)


def test_approximate_pnorm():
    z = np.array([0.22963699, 0.23681269, -0.45969365, 0.00589497, -0.35259482,
                  0.80947113, 0.92117827, -0.79465278, 1.72367294, 0.35036349])

    actual = approximate_pnorm(z, z.mean(), z.std(ddof=1))
    expected = [0.47991820, 0.48377117, 0.16382454, 0.36253368, 0.20197792,
                0.76750486, 0.81087999, 0.07634973, 0.97511425, 0.54470796]

    assert_allclose(actual, expected)
