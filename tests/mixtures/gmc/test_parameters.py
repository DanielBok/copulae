import pytest
from numpy.testing import assert_allclose

from copulae.mixtures.gmc.parameter import GMCParam

param2 = GMCParam(
    n_clusters=3,
    n_dim=2,
    prob=[0.48923563, 0.05350188, 0.45726249],
    means=[
        [-7.866836, -11.073276],
        [-3.336661, 24.139628],
        [-23.879568, -5.213695]
    ],
    covs=[
        [[15.9705696, -0.27545926],
         [-0.2754593, 0.01738696]],
        [[3.973527, -2.588777],
         [-2.588777, 6.676961]],
        [[5.3549889, -0.3326589],
         [-0.3326589, 4.8624179]]
    ]
)

param3 = GMCParam(
    n_clusters=3,
    n_dim=3,
    prob=[0.48923563, 0.05350188, 0.45726248],
    means=[
        [-7.866836, -11.073276, -3.336661],
        [24.139628, -23.879568, -5.213695],
        [0.01579013, 19.96915555, -0.20905425],
    ],
    covs=[
        [[10.2117067, 1.2660601, 0.4483301],
         [1.2660601, 16.0272934, -0.2477051],
         [0.4483301, -0.2477051, 10.6160624]],

        [[10.577139, -2.0196453, 2.3501990],
         [-2.019645, 5.7465517, 0.8115075],
         [2.350199, 0.8115075, 6.0729275],
         ],
        [[7.21748434, 0.59955180, -0.06163302],
         [0.59955180, 7.14172519, -0.06657406],
         [-0.06163302, -0.06657406, 7.01162171]]
    ]
)

vector2 = [-0.04306412, -2.87305211, -0.17136823, 1.13358688,
           267.04838402, -4.00686963, 44.43802129, -0.52273947,
           -0.6955468, -9.84905928, 2.8297709, -0.54635949,
           -1.0902045, 2.81465564]

vector3 = [-0.04306412, -2.87305211, -0.17136823, 10.01586657, -3.19884561,
           -0.57609006, 2.46673091, 7.75399726, 0.95990973, 0.09896351,
           0.04305931, -0.02336592, 0.01758008, -0.15511754, -0.54757952,
           0.22178839, 0.16705549, -0.35164601, -0.17351416, 0.05574471,
           -0.40766844, -0.00704107, -0.00708253, -0.20747509]


@pytest.mark.parametrize("param, expected", [
    (param2, vector2),
    (param3, vector3),
])
def test_to_vector(param, expected):
    vector = param.to_vector()
    assert_allclose(vector, expected, rtol=1e-4)


@pytest.mark.parametrize('param, vector, prob, means, covs', [
    (param2, vector2,
     [0.48923563, 0.05350188, 0.45726248],
     [[0, 0],
      [1.13358688, 267.04838402],
      [-4.00686963, 44.43802129]],
     [[[1, -0.52273947],
       [-0.52273947, 1]],
      [[0.24880306, -4.91272681],
       [-4.91272681, 384.02106989]],
      [[0.33530357, -0.63128731],
       [-0.63128731, 279.65880939]]]),
    (param3, vector3,
     [0.48923563, 0.05350188, 0.45726248],
     [
         [0, 0, 0],
         [10.0158666, -3.1988456, -0.5760901],
         [2.4667309, 7.7539973, 0.9599097]
     ],
     [
         [[1.00000000, 0.09896351, 0.04305931],
          [0.09896351, 1.00000000, -0.01898992],
          [0.04305931, -0.01898992, 1.00000000]],
         [[1.0357856, -0.15786863, 0.22572192],
          [-0.1578686, 0.35854786, 0.06221294],
          [0.2257219, 0.06221294, 0.57205085]],
         [[0.70678531, 0.04686487, -0.00591946],
          [0.04686487, 0.44559771, -0.00510380],
          [-0.00591946, -0.00510380, 0.66047292]]
     ])
])
def test_from_vector(param, vector, prob, means, covs):
    actual = GMCParam.from_vector(vector, param.n_clusters, param.n_dim)
    assert_allclose(actual.prob, prob, rtol=1e-4)
    assert_allclose(actual.means, means, rtol=1e-4)
    assert_allclose(actual.covs, covs, rtol=1e-4)
